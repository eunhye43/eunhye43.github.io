{"componentChunkName":"component---src-templates-blog-template-js","path":"/project2/","result":{"data":{"cur":{"id":"4b04fd9c-0bc9-55aa-ad5f-2e4859af2d69","html":"<h3 id=\"-1차-프로젝트-hoxy-lush-\" style=\"position:relative;\"><a href=\"#-1%EC%B0%A8-%ED%94%84%EB%A1%9C%EC%A0%9D%ED%8A%B8-hoxy-lush-\" aria-label=\" 1차 프로젝트 hoxy lush  permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🦖 1차 프로젝트 &#x3C;HOXY LUSH?> 🦖</h3>\n<blockquote>\n<ul>\n<li>오늘 배운 것\n모델링 끄읕-! 테이블도 models.py도 완성 잘하고 컨펌도 잘 받음!\n🥕 1. 함께 협업 할 때에는 한 사람이 models.py를 작성하는 것이 좋고 github에 push후 pull request를 올림. github메인에서 local메인으로 받는 것이 pull이고, 내 terminal에서는,</li>\n</ul>\n</blockquote>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">git checkout main \ngit pull origin main</code></pre></div>\n<p>이렇게 받아주면 됨.\n그다음 로컬 메인 브랜치에서 새로운 브랜치를 만들고 거기로 checkout해서 내 작업 다시 시작하면됨!\n브랜치 옮길때는 add-commit 꼮꼮!!\n🥕 2. Models.py에서 ForeignKey참조할 때, 클래스명에서 오류가 났는데 그런 경우, 참조해오는 클래스명에는 ”을 붙여주지 않기!</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">1) user = models.ForeignKey(User, on_delete=models.CASCADE)\n2) product = models.ForeignKey(\"Product\", on_delete=models.CASCADE)</code></pre></div>\n<p>1)번은 users앱에서 가져온 User class이고, 2)번은 기존 앱에 있는 Product class이기 때문에 \"\" 유뮤의 차이가 있다!\n🥕 3. Pull받아올 때, my_settings.py랑 database는 내가 새로 생성해줘야한다는 점!\n🥕 4.내가 맡은 회원가입 할 때, 꼭 필요한 것?</p>\n<ul>\n<li>가상환경은 무조건 (다 깔려있는 걸로 불러와주자)</li>\n<li>httpie 깔려있어야!(brew install httpie)</li>\n<li>import json, bcrypt, jwt </li>\n<li>어차피 회원가입&#x26;로그인 같이 할거니까, 회원가입에서는 hashed_password로만 만들어주고 .validator.py 따로 만들어서 회원가입과 로그인 두개 다 관리해주자.</li>\n<li>\n<p>서버 켜주고, 통신해주기.\n🥕 5. 통신할 때는 ^^</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">http post http://127.0.0.1:8000/users/signup account='hiroo123' password='2sdascacsasfa' email='abc8@naver.com' phone_number=01012345678</code></pre></div>\n<p><strong>루트지정을 users(앱)/signup(앱에서 지정해준 연결통로)!!!</strong>\n이걸 몰라서 무수한 404를 접하게 되었다^^ 절대 안까먹을 듯. 승무님 고마씁니당…😇</p>\n</li>\n</ul>\n<blockquote>\n<p>🥝 오늘도 진짜 많이 배웠다. 하나를 배울 때 좀 더 머리와 손과 맘에 체화시키는 노력이 필요하다. 초기세팅-회원가입-로그인은 절대! 잊지 않도록 이번 프로젝트때 이것만은 꼭 잡고 가도록 노력해야지!</p>\n</blockquote>","excerpt":"🦖 1차 프로젝트 <HOXY LUSH?> 🦖 오늘 배운 것\n모델링 끄읕-! 테이블도 models.py도 완성 잘하고 컨펌도 잘 받음!\n🥕 1. 함께 협업 할 때에는 한 사람이 models.py를 작성하는 것이 좋고 github에 push후 pull request를 올림. github메인에서 local메인으로 받는 것이 pull이고, 내 terminal에서는, 이렇게 받아주면 됨.\n그다음 로컬 메인 브랜치에서 새로운 브랜치를 만들고 거기로 checkout해서 내 작업 다시 시작하면됨! \n브랜치 옮길때는 add-commit 꼮꼮!!\n🥕 2. Models.py에서 ForeignKey참조할 때, 클래스명에서 오류가 났는데 그런 경우, 참조해오는 클래스명에는 ”을 붙여주지 않기! 1)번은 users앱에서 가져온 User class이고, 2)번은 기존 앱에 있는 Product class이기 때문에 \"\" 유뮤의 차이가 있다!\n🥕 3. Pull받아올 때, my_settings.py랑 databa…","frontmatter":{"date":"May 12, 2021","title":"HoxyLush(2)","categories":"프로젝트","author":"majaeh","emoji":"🍄"},"fields":{"slug":"/project2/"}},"next":{"id":"554f54a1-fe2d-5f07-b758-1050053b0779","html":"<h3 id=\"-1차-프로젝트-hoxy-luch-\" style=\"position:relative;\"><a href=\"#-1%EC%B0%A8-%ED%94%84%EB%A1%9C%EC%A0%9D%ED%8A%B8-hoxy-luch-\" aria-label=\" 1차 프로젝트 hoxy luch  permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🦖 1차 프로젝트 &#x3C;HOXY LUCH?> 🦖</h3>\n<blockquote>\n</blockquote>\n<ul>\n<li>클론사이트 : LUSH KOREA</li>\n<li>기간 : 2021.05.10 - 2021.05.21</li>\n<li>팀구성\n프론트 (권오재, 김민정, 김훈익)\n백엔드 (김경래, 박은혜, 이승무)</li>\n</ul>\n<blockquote>\n<ul>\n<li>현재 진행 중인 것.</li>\n</ul>\n</blockquote>\n<ol>\n<li>Trello 활용 진행사항 확인하기\n크게 Backlog / This Week / In Progress / Done 으로 나눠서 최대한 세세하게 각각 해야할 업무들을 정리.</li>\n<li>깃헙 공유, 슬랙 공유를 통한 원활한 처리.</li>\n<li>LUSH KOREA 사이트 스키밍 후 모델링 시작 및 진행 중.</li>\n<li>테이블 만드는 데만 하루 종일 시간을 보낸 듯.</li>\n<li>프로젝트의 기본은 모델링. 프론트와의 소통이 정말 중요함을 다시 한 번 느낌.</li>\n</ol>\n<blockquote>\n<ul>\n<li>오늘 피드백 받은 것.\n-변수명 <strong>직관적인 풀네임</strong>으로 써줘라 (Goods-> Products)\n-Product를 중심으로 review tale, tag table order table을 관리하고, 언제든 수정-보완 하도록 해주기.\n-리뷰라는 테이블을 따로 만들어서 관리해줘라. 언제든지 수정 보완 가능하도록 해줘라\n-옵션에 따른 재고도 다를 것 같은데 고려해야함.(이 부분을 생각못하고 테이블을 안만들었었는데 중요한거였음!🦕)\n-용량, 가격이 다 달라서 따로 관리해줘야함. 그람수 별로 테이블을 새로 만들어야 할듯.-> product_options table 별도 생성! (lush는 그람당, 용량당 가격이 다르기 때문에 그걸 참고해서 별도로 테이블 관리를 해주어야 했음!)\n-<strong>최대한 많은 기능</strong>을 모델링으로 작성하면 좋을 것 같음.(쉽지않지만 이것저것 해보는 걸 추천해주심)\n-장바구니+결제 기능을 묶어서 orders table을 만들었음. 이케 훨씬 편하고 좋음.\n-앱 별로 색깔 묶어서 보기좋게 정리하자.(product위주로 색깔을 구분하니까 한눈에 알아볼 수 있어서 편함!)</li>\n</ul>\n</blockquote>\n<blockquote>\n<ul>\n<li>오늘 배운 것</li>\n</ul>\n</blockquote>\n<ol>\n<li>모델링은 정말이지 어렵다. 중요한 건 프론트랑 상의해서 필수구현사항과 추가구현사항을 정확하게 파악하는 것.</li>\n<li>아직도 many to many와 역참조, 정참조가 어렵다. 오늘 했던 테이블가지고 연습을 더 해야할 것 같다.</li>\n<li>재고 테이블과 리뷰 테이블이 새로웠다. 어떻게 다른 테이블들과 연결되는지 공부할 것.</li>\n<li>지금만든 테이블로 models.py 엄청 만들텐데 손에 다 익혀버리는 시간을 가져야겠다.</li>\n<li>정말 하루 종일 백엔드가 모델링에만 매달린 하루였다. 피드백이 자꾸 번복되고 답답한 시간이었을텐데 서로 배려하려고 노력하고 힘내려고하는 모습에 감동이었다. 이런 팀원분들하고 프로젝트를 하는 나는 정말 럭키다. 하나라도 더 알려고 노력하고 배우고려하고 도움이 되는 팀원이 되고 싶다! 🐳</li>\n<li>모델링만 조금 완료되면 프론트 분들과 좀 더 소통하고 싶고 어떻게 프론트에서 우리의 로직이 구현되는지 확인해보고 싶다. 하루에 하나씩 배워가기!</li>\n</ol>\n<div class=\"table-of-contents\">\n<ul>\n<li><a href=\"#-1%EC%B0%A8-%ED%94%84%EB%A1%9C%EC%A0%9D%ED%8A%B8-hoxy-luch-\">🦖 1차 프로젝트 &#x3C;HOXY LUCH?> 🦖</a></li>\n</ul>\n</div>","frontmatter":{"date":"May 11, 2021","title":"HoxyLush(1)","categories":"프로젝트","author":"majaeh","emoji":"🍄"},"fields":{"slug":"/3d-book/"}},"prev":{"id":"b16b76ed-cc21-5297-a81d-03647681cbb0","html":"<p>🦖 1차 프로젝트 &#x3C;HOXY LUSH?> 🦖\n오늘은 회원가입&#x26;로그인 models.py를 토대로 views.py 마무리를 했다. 통신하는 것 때문에 속도가 좀 더뎌진게 맘에 걸리지만 하나하나 꼼꼼하게 해나가고 있는 것 같아서 걱정되면서도 뿌듯했다.</p>\n<blockquote>\n<h2 id=\"오늘-배운-것\" style=\"position:relative;\"><a href=\"#%EC%98%A4%EB%8A%98-%EB%B0%B0%EC%9A%B4-%EA%B2%83\" aria-label=\"오늘 배운 것 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>오늘 배운 것!</h2>\n</blockquote>\n<p>😇 1. 코드컨벤션에 따라 모듈을 구분해주는 것.</p>\n<ul>\n<li>python 자체 모듈</li>\n<li>django 모듈</li>\n<li>\n<p>사용자 생성 모듈</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">import json # 파이썬 자체모듈\nimport bcrypt\nimport jwt\nimport re\nfrom django.views         import View #django 모듈\nfrom django.http          import JsonResponse\nfrom json.decoder         import JSONDecodeError\nfrom users.models         import User #사용자 생성 모듈\nfrom my_settings          import SECRET_KEY, ALGORITHM</code></pre></div>\n</li>\n</ul>\n<p>😇 2. 정규표현식! (유효성 검사를 위한 정규표현식)</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">🦕 email_validation    = re.compile('^[a-z0-9]+@[a-z0-9]+\\.[a-z0-9.]+$', re.I)\n🦕 password_validation = re.compile(r'^(?=.*[a-z])(?=.*[0-9])(?=.*[~!@#$%^&amp;*]).{8,}', re.I)\nif not email_validation.match(email):\n   return JsonResponse({\"MESSAGE\" : \"INVALID_EMAIL\"}, status=400)\nif not password_validation.match(password):\n   return JsonResponse({\"MESSAGE\" : \"INVALID_PASSWORD\"}, status=400)</code></pre></div>\n<ul>\n<li>email과 password에 대해 validation을 정의해주고, if문을 통해 유효성 검사를 진행해주기!… 그냥 외울까?…?</li>\n</ul>\n<p>😇 3. 중복값 없애기</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">if User.objects.filter(phone_number=data.get('phone_number')).exists()\\\n   and data.get('phone_number') != None:\n   return JsonResponse({'MESSAGE': 'ALREADY_EXISTS'}, status = 400)\n\nif User.objects.filter(nickname=data.get('nickname')).exists()\\\n   and data.get('nickname') != None:\n   return JsonResponse({'MESSAGE' : 'ALREADY_EXISTS'}, status = 400)</code></pre></div>\n<p>Q를 쓰라고 말씀을 해주셨는데 Q를 썼다가 중복을 제대로 거를 수가 없어서 if문, filter값을 활용하고 None값이 아닌 것을 조건으로 주어서 phone_number와 nickname의 중복값을 걸러주었다.</p>\n<ul>\n<li>data[‘nickname’] 과 data.get(‘nickname’)차이?\ndata[‘nickname’]으로 정의하면 닉네임 값이 들어오지 않을 시 바로 에러가 나오고 data.get(‘nickname’)으로 정의 시 null값으로 들어옴!</li>\n</ul>\n<p>😇 4. 토큰 발행 할 때, algorithm도 my_settings에 추가해주기!</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">access_token = jwt.encode({\"account\" : user.id}, SECRET_KEY, algorithm = ALGORITHM)\n\n# 쪼기에 있는 알고리즘을 ![](https://images.velog.io/images/majaeh43/post/b7cafade-f809-48fb-aaf1-35716bfdf70d/image.png) 요렇게 추가!</code></pre></div>\n<p>😇 5. 상태코드 401과 404의 차이?\n상태코드 401은 인증이 안돼 자원을 이용할 수 없는 상태고, 미인증 상태를 의미!\n상태코드 404는 원하는 경로 파일, 자원등을 찾을 수 없을 때 발생함. (경래님 답변!)</p>\n<p>😇 조심해야할 부분!\npull받고 makemigration, migrate 챙기기.\ncommit message 주의해서 올리기 *링크텍스트(<a href=\"https://www.notion.so/wecode/Commit-Message-Guidelines-eb3d8ebc0d014c26848ee628934ae430\">https://www.notion.so/wecode/Commit-Message-Guidelines-eb3d8ebc0d014c26848ee628934ae430</a>)\n통신할 때, 에러메시지 다 확인하기 -> 내가 쓴 코드에 대해서 정확하게 다 파악하고 있기.</p>\n<p>😇 내가 오늘 배운 것을 느리더라도 천천히 소화시켜주기.\n행복하려고 배우는 코딩인데 행복지수가 점점 낮아지는 것 같은 기분이 들때가 있다. 그치만 순간순간 감사하면서 1초 1초 더 나아지고 성장하고 싶은 맘이다. 그만 징징대고 오류와의 혈투를 피하지 않겠다…</p>","frontmatter":{"date":"May 14, 2021","title":"HoxyLush(3)","categories":"프로젝트","author":"majaeh","emoji":"🍄"},"fields":{"slug":"/project1-3/"}},"site":{"siteMetadata":{"siteUrl":"https://eunhye43.github.io","comments":{"utterances":{"repo":"zoomkoding/zoomkoding-gatsby-blog"}}}}},"pageContext":{"slug":"/project2/","nextSlug":"/3d-book/","prevSlug":"/project1-3/"}},"staticQueryHashes":["1073350324","2938748437"]}